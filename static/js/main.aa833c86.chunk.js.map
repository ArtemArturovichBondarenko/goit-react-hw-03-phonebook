{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","state","name","number","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","props","onAddContact","objectSpread","_React$createElement","_this$state","this","react_default","a","createElement","Fragment","className","styles","form","onSubmit","type","required","onChange","placeholder","title","button","Component","Contact","_ref","onDeleteContact","onClick","ContactList","items","map","item","key","id","components_Contact_Contact","assign","Filter","onChangeFilter","App","contacts","filter","changeFilter","addContact","some","contact","contactToAdd","uuidv4","concat","toConsumableArray","alert","deleteContact","persistContacts","localStorage","getItem","JSON","parse","error","console","log","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","ContactForm_ContactForm","length","components_Filter_Filter","components_ContactList_ContactList","ReactDOM","render","App_App","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.aa833c86.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            required\r\n            placeholder=\"___-__-__\"\r\n            title=\"Формат: 999-99-99\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <span>{name}:</span>\r\n    <span>{number}</span>\r\n    <button type=\"button\" onClick={onDeleteContact}>\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contact/Contact';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) => (\r\n  <>\r\n    <ul>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChangeFilter}></input>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component, createContext } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const persistContacts = localStorage.getItem('contacts');\n\n    if (persistContacts) {\n      try {\n        const contacts = JSON.parse(persistContacts);\n        this.setState({ contacts });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = item => {\n    const { contacts } = this.state;\n\n    const searchExistingContact = contacts.some(\n      contact => contact.name === item.name,\n    );\n\n    if (searchExistingContact === true) {\n      alert(`${item.name} is allready in contact`);\n      return;\n    } else {\n      const contactToAdd = {\n        ...item,\n        id: uuidv4(),\n      };\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length >= 2 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__d8k4e\",\"button\":\"ContactForm_button__2mjYo\"};"],"sourceRoot":""}